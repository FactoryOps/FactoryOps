// <auto-generated />
using System;
using FactoryOps.Api.Database.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FactoryOps.Api.Migrations
{
    [DbContext(typeof(FactoryOpsContext))]
    partial class FactoryOpsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FactoryOps.Api.Database.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DepartmentHead")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("FactoryOps.Api.Database.Models.WorkItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalInfo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("PlanedStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float>("TechnologicalHour")
                        .HasColumnType("real");

                    b.Property<float>("TechnologicalWorkingFactor")
                        .HasColumnType("real");

                    b.Property<int?>("WorkingUnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WorkingUnitId");

                    b.ToTable("WorkItems");
                });

            modelBuilder.Entity("FactoryOps.Api.Database.Models.WorkingUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("WorkingUnits");
                });

            modelBuilder.Entity("FactoryOps.Api.Database.Models.WorkItem", b =>
                {
                    b.HasOne("FactoryOps.Api.Database.Models.WorkingUnit", null)
                        .WithMany("WorkItems")
                        .HasForeignKey("WorkingUnitId");
                });

            modelBuilder.Entity("FactoryOps.Api.Database.Models.WorkingUnit", b =>
                {
                    b.HasOne("FactoryOps.Api.Database.Models.Department", null)
                        .WithMany("WorkingUnits")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("FactoryOps.Api.Database.Models.Department", b =>
                {
                    b.Navigation("WorkingUnits");
                });

            modelBuilder.Entity("FactoryOps.Api.Database.Models.WorkingUnit", b =>
                {
                    b.Navigation("WorkItems");
                });
#pragma warning restore 612, 618
        }
    }
}
